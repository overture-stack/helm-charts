# Default values for ego.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/overture-stack/ego
  tag: latest
  pullPolicy: IfNotPresent

uiImage:
  repository: ghcr.io/overture-stack/ego-ui
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
serviceApi:
  port: http
serviceUi:
  port: http-ui

ingressApi:
  # annotations:
  #   cert-manager.io/cluster-issuer: letsencrypt
  # className: private
  enabled: false
  hosts:
    - host: ego.local
      paths:
        - path: /api/(.*)
          pathType: ImplementationSpecific

  # tls:
  #   - hosts:
  #     - ego.local
  #     secretName: ego.local

ingressUi:
  # annotations:
  #   cert-manager.io/cluster-issuer: letsencrypt
  # className: private
  enabled: false
  hosts:
    - host: ui.ego.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # tls:
  #   - hosts:
  #     - ui.ego.local
  #     secretName: ui.ego.local

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

# choose rbac roles to enable
rbac:
  create:
    # for vault kubernetes integration
    tokenReview: true

appConfig:
  # api configs
  activeProfiles: auth,grpc
  apiPath: /api
  databaseUrl: ""
  facebookClientID: placeholder
  facebookClientSecret: ""
  githubClientID: placeholder
  githubClientSecret: ""
  googleAuthorizationUri: ""
  googleClientID: ""
  googleClientSecret: ""
  host: ego.local
  keycloakClientID: placeholder
  keycloakClientSecret: ""
  linkedInClientID: placeholder
  linkedInClientSecret: ""
  orcidClientID: placeholder
  orcidClientSecret: ""
  psqlSecretName: ego-postgres-postgresql
  psqlSecretKey: postgres-password
  psqlUsername: ""
  swaggerBaseUrl:
  swaggerHost:
  existingSecrets:
    google:
      secretName: ""
      secretKeyName: ""
      clientIDKeyName: ""
    orcid:
      secretName: ""
      secretKeyName: ""
      clientIDKeyName: ""
    linkedin:
      secretName: ""
      secretKeyName: ""
      clientIDKeyName: ""
    github:
      secretName: ""
      secretKeyName: ""
      clientIDKeyName: ""
    facebook:
      secretName: ""
      secretKeyName: ""
      clientIDKeyName: ""
  # ui configs
  apiTokenDurationDays: "30"
  defaultProvider: ""
  egoClientId: ego
  jwt:
    appDurationMs: "10800000"
    secret: ""
    userDurationMs: "10800000"
  refreshToken:
    cookieIsSecure: ""
    durationMs: "43200000"
  uiKeycloakEnabled: ""
  uiPassportEnabled: ""

extraEnv: {}
# extraEnvYaml:
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID
#       valueFrom:
#         secretKeyRef:
#           key: client-id
#           name: google-credentials
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: client-secret
#           name: google-credentials
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ORCID_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: orcid-client-secret
#           name: ego
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LINKEDIN_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: linkedin-client-secret
#           name: ego
#     - name: KEYCLOAK_CLIENT_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: keycloak-client-secret
#           name: ego
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: github-client-secret
#           name: ego
#     - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENTSECRET
#       valueFrom:
#         secretKeyRef:
#           key: facebook-client-secret
#           name: ego
