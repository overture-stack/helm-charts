apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "song.server.fullname" . }}
  labels:
    app: {{ include "song.name" . }}
    chart: {{ include "song.chart" . }}
    component: "server"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "song.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "song.name" . }}
        release: {{ .Release.Name }}
        component: "server"
    spec:
      containers:
        - name: song-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AUTH_SERVER_URL
              value: {{ .Values.appConfig.auth.server.url }}
            - name: AUTH_SERVER_CLIENTID
              value: {{ .Values.appConfig.auth.server.clientID }}
            - name: AUTH_SERVER_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "song.fullname" . }}
                  key: auth-server-client-secret
            - name: AUTH_SERVER_PREFIX
              value: {{ .Values.appConfig.auth.server.prefix }}
            - name: AUTH_SERVER_SUFFIX
              value: {{ .Values.appConfig.auth.server.suffix }}
            - name: ID_IDURL
              value: {{ .Values.appConfig.id.idURL }}
            - name: ID_AUTHTOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "song.fullname" . }}
                  key: id-authtoken
            - name: ID_REALIDS
              value: {{ .Values.appConfig.id.realIDs }}
            - name: SCORE_URL
              value: {{ .Values.appConfig.score.url }}
            - name: SCORE_ACCESSTOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "song.fullname" . }}
                  key: score-accessToken
            - name: SPRING_FLYWAY_ENABLED
              value: {{ .Values.appConfig.flyway.enabled }}
            - name: SPRING_FLYWAY_LOCATIONS
              value: {{ .Values.appConfig.flyway.locations}}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ template "song.fullname" . }}-postgres:5432/{{ .Values.postgres.postgresDb }}?stringtype=unspecified
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgres.postgresUsername }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "song.fullname" . }}-postgres
                  key: postgres-password
{{- if .Values.extraEnv }}
  {{ range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
  {{- end }}
{{- end }}
          ports:
            - containerPort: 8080
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          readinessProbe:
            httpGet:
              path: /swagger-ui.html
              port: 8080
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
