# Default values for song.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/overture-stack/song-server
  tag: latest
  pullPolicy: IfNotPresent

backupImage:
  repository: rtisma1/postgres2s3
  tag: 1.0.2
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
    - song.local
  tls: []

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

volumeSize: 20Gi

extraEnv: {}

appConfig:
  profiles: "prod,secure,default,jwt,score-client-creds"
  id:
    useLocal: true
    federated:
      auth:
        bearer:
          token: "someToken"
      uriTemplate:
        donor: https://id.example.org/donor/id?submittedProjectId={studyId}&submittedDonorId={submitterId}&create=true
        specimen: https://id.example.org/specimen/id?submittedProjectId={studyId}&submittedSpecimenId={submitterId}&create=true
        sample: https://id.example.org/sample/id?submittedProjectId={studyId}&submittedSampleId={submitterId}&create=true
  flyway:
    enabled: true
    locations: classpath:flyway/sql,classpath:db/migration
  auth:
    server:
      scope:
        study:
          prefix: "song."
          suffix: ".WRITE"
        system: "song.WRITE"
      url: https://auth.local/oauth/check_token
      tokenName: token
      clientID: metadata
      clientSecret: test
    jwt:
      publicKeyUrl: https://auth.local/oauth/public_key

  score:
    url: https://storage.local
    accessToken: "321"
    clientCredentials:
      id: oauth
      secret: oauthsecret
      tokenUrl: https://auth.local/oauth/token
      systemScope: score.WRITE

postgres:
  postgresUsername: postgres
  postgresPassword: password
  postgresDb: song

podSecurityContext:
  runAsGroup: 9999
  runAsNonRoot: true
  runAsUser: 9999

backup:
  enabled: false
  # Refer to link for schedule syntax
  # https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
  schedule: "* */10 * * * *"
  prefix: backup
  autoCreateBucket: true
  s3:
    accessKey: someS3AcccesKey
    secretKey: someS3SecretKey
    bucketName: postgres-backups
    bucketPath: some-namespace/song
    endpointUrl: "https://object.local:9080"
